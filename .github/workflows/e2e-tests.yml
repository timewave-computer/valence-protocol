name: Execute e2e tests

on:
  pull_request:
    types: [labeled]
    branches: [main]
  workflow_dispatch:
  # workflow_run:
  #   workflows: ["build and test"]
  #   branches: [main]
  #   types: 
  #     - completed

# Ensures that only a single workflow per PR will run at a time. Cancels in-progress jobs if new commit is pushed.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  RUSTFLAGS: "-Dwarnings"
  GO_VERSION: 1.21

jobs:
  get-ci-workflow-run-id:
    runs-on: ubuntu-latest
    steps:
      - name: Get CI Workflow Run ID
        id: get_last_run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          workflow_name="check-ci.yml"
          branch="${{ github.event.pull_request.head.ref }}""

          # Fetch the list of workflow runs for the specified workflow file on the PR branch
          response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$workflow_name/runs?branch=$branch&event=pull_request&status=completed")

          # Get the ID of the most recent workflow run
          ci_workflow_run_id=$(echo "$response" | jq '.workflow_runs[0].id')

          echo "Last CI workflow run ID for $workflow_name on branch $branch: $ci_workflow_run_id"
          echo "::set-output name=ci_workflow_run_id::$ci_workflow_run_id"

  setup-local-ic:
    runs-on: ubuntu-latest
    steps:
      - name: Install local-ic
        run: git clone https://github.com/strangelove-ventures/interchaintest && cd interchaintest/local-interchain && make install

      - name: Upload local-ic artifact
        uses: actions/upload-artifact@v4
        with:
          name: local-ic
          path: ~/go/bin/local-ic

  local-ic-polytone:
    needs: [setup-local-ic, get-ci-workflow-run-id]
    name: authorization & processor polytone integration test
    if: ${{ github.event.label.name == 'e2e-tests-polytone' || github.event.label.name == 'e2e-tests-all' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Build artefacts
        uses: Swatinem/rust-cache@v2.7.5
        with:
          cache-on-failure: true
          shared-key: ${{ github.event.pull_request.number || github.ref }}

      - name: Get cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: optimized-contracts
          path: ./artifacts
          run_id: ${{ needs.get-ci-workflow-run-id.outputs.ci_workflow_run_id }}

      - name: List downloaded files
        run: ls -l ./artifacts

      - name: Download local-ic artifact
        uses: actions/download-artifact@v4
        with:
          name: local-ic
          path: /tmp
          run_id: ${{ needs.get-ci-workflow-run-id.outputs.ci_workflow_run_id }}

      - name: Make local-ic executable
        run: chmod +x /tmp/local-ic

      - name: Start local-ic and wait for it to be ready
        run: |
          cd local-interchaintest
          /tmp/local-ic start neutron_juno --api-port 42069 &
          curl --head -X GET --retry 200 --retry-connrefused --retry-delay 5 http://localhost:42069

      - name: Run polytone example
        env:
          RUST_LOG: debug
        run: cargo run --package local-interchaintest --example polytone

      - name: Cleanup
        run: killall local-ic && exit 0

  # local-ic-token-swap:
  #   needs: build
  #   name: token swap e2e test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Get cargo
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable

  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: optimized-contracts
  #         path: ./artifacts

  #     - name: List downloaded files
  #       run: ls -l ./artifacts

  #     - name: Download local-ic artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: local-ic
  #         path: /tmp

  #     - name: Make local-ic executable
  #       run: chmod +x /tmp/local-ic

  #     - name: Start local-ic and wait for it to be ready
  #       run: |
  #         cd local-interchaintest
  #         /tmp/local-ic start neutron --api-port 42069 &
  #         curl --head -X GET --retry 200 --retry-connrefused --retry-delay 5 http://localhost:42069

  #     - name: Run token_swap example
  #       env:
  #         RUST_LOG: debug
  #       run: cargo run --package local-interchaintest --example token_swap

  #     - name: Cleanup
  #       run: killall local-ic && exit 0

  # local-ic-2-party-pol-astroport-neutron:
  #   needs: build
  #   name: 2 party POL Astroport on Neutron e2e test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Get cargo
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable

  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: optimized-contracts
  #         path: ./artifacts

  #     - name: List downloaded files
  #       run: ls -l ./artifacts

  #     - name: Download local-ic artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: local-ic
  #         path: /tmp

  #     - name: Make local-ic executable
  #       run: chmod +x /tmp/local-ic

  #     - name: Start local-ic and wait for it to be ready
  #       run: |
  #         cd local-interchaintest
  #         /tmp/local-ic start neutron --api-port 42069 &
  #         curl --head -X GET --retry 200 --retry-connrefused --retry-delay 5 http://localhost:42069
      
  #     - name: Run 2 party POL Astroport on Neutron example
  #       env:
  #         RUST_LOG: debug
  #       run: cargo run --package local-interchaintest --example two_party_pol_astroport_neutron

  #     - name: Cleanup
  #       run: killall local-ic && exit 0

  # local-ic-ibc-transfer-ntrn-juno:
  #   needs: build
  #   name: IBC transfer NTRN->JUNO e2e test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Get cargo
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable

  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: optimized-contracts
  #         path: ./artifacts

  #     - name: List downloaded files
  #       run: ls -l ./artifacts

  #     - name: Download local-ic artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: local-ic
  #         path: /tmp

  #     - name: Make local-ic executable
  #       run: chmod +x /tmp/local-ic

  #     - name: Start local-ic and wait for it to be ready
  #       run: |
  #         cd local-interchaintest
  #         /tmp/local-ic start neutron_juno --api-port 42069 &
  #         curl --head -X GET --retry 200 --retry-connrefused --retry-delay 5 http://localhost:42069

  #     - name: Run IBC transfer NTRN->JUNO example
  #       env:
  #         RUST_LOG: debug
  #       run: cargo run --package local-interchaintest --example ibc_transfer_ntrn_juno

  #     - name: Cleanup
  #       run: killall local-ic && exit 0

  # local-ic-ibc-transfer-juno-ntrn:
  #   needs: build
  #   name: IBC transfer JUNO->NTRN e2e test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Get cargo
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable

  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: optimized-contracts
  #         path: ./artifacts

  #     - name: List downloaded files
  #       run: ls -l ./artifacts

  #     - name: Download local-ic artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: local-ic
  #         path: /tmp

  #     - name: Make local-ic executable
  #       run: chmod +x /tmp/local-ic

  #     - name: Start local-ic and wait for it to be ready
  #       run: |
  #         cd local-interchaintest
  #         /tmp/local-ic start neutron_juno --api-port 42069 &
  #         curl --head -X GET --retry 200 --retry-connrefused --retry-delay 5 http://localhost:42069

  #     - name: Run IBC transfer JUNO->NTRN example
  #       env:
  #         RUST_LOG: debug
  #       run: cargo run --package local-interchaintest --example ibc_transfer_juno_ntrn

  #     - name: Cleanup
  #       run: killall local-ic && exit 0

  # local-ic-ibc-transfer-ntrn-juno-gaia-pfm:
  #   needs: build
  #   name: IBC transfer NTRN->JUNO->GAIA PFM e2e test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Get cargo
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable

  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: optimized-contracts
  #         path: ./artifacts

  #     - name: List downloaded files
  #       run: ls -l ./artifacts

  #     - name: Download local-ic artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: local-ic
  #         path: /tmp

  #     - name: Make local-ic executable
  #       run: chmod +x /tmp/local-ic

  #     - name: Start local-ic and wait for it to be ready
  #       run: |
  #         cd local-interchaintest
  #         /tmp/local-ic start neutron_juno --api-port 42069 &
  #         curl --head -X GET --retry 200 --retry-connrefused --retry-delay 5 http://localhost:42069

  #     - name: Run IBC transfer NTRN->JUNO example
  #       env:
  #         RUST_LOG: debug
  #       run: cargo run --package local-interchaintest --example ibc_transfer_ntrn_juno_gaia_pfm

  #     - name: Cleanup
  #       run: killall local-ic && exit 0

  # local-ic-ibc-transfer-osmo-ntrn:
  #   needs: build
  #   name: IBC transfer OSMO->NTRN e2e test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Get cargo
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable

  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: optimized-contracts
  #         path: ./artifacts

  #     - name: List downloaded files
  #       run: ls -l ./artifacts

  #     - name: Download local-ic artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: local-ic
  #         path: /tmp

  #     - name: Make local-ic executable
  #       run: chmod +x /tmp/local-ic

  #     - name: Start local-ic and wait for it to be ready
  #       run: |
  #         cd local-interchaintest
  #         /tmp/local-ic start neutron_osmosis --api-port 42069 &
  #         curl --head -X GET --retry 200 --retry-connrefused --retry-delay 5 http://localhost:42069

  #     - name: Run IBC transfer OSMO->NTRN example
  #       env:
  #         RUST_LOG: debug
  #       run: cargo run --package local-interchaintest --example ibc_transfer_osmo_ntrn

  #     - name: Cleanup
  #       run: killall local-ic && exit 0

  # local-ic-ibc-transfer-osmo-juno-gaia-pfm:
  #   needs: build
  #   name: IBC transfer OSMO->JUNO->GAIA PFM e2e test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Get cargo
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable

  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: optimized-contracts
  #         path: ./artifacts

  #     - name: List downloaded files
  #       run: ls -l ./artifacts

  #     - name: Download local-ic artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: local-ic
  #         path: /tmp

  #     - name: Make local-ic executable
  #       run: chmod +x /tmp/local-ic

  #     - name: Start local-ic and wait for it to be ready
  #       run: |
  #         cd local-interchaintest
  #         /tmp/local-ic start juno_osmosis --api-port 42069 &
  #         curl --head -X GET --retry 200 --retry-connrefused --retry-delay 5 http://localhost:42069

  #     - name: Run IBC transfer OSMO->JUNO->GAIA PFM example
  #       env:
  #         RUST_LOG: debug
  #       run: cargo run --package local-interchaintest --example ibc_transfer_osmo_juno_gaia_pfm

  #     - name: Cleanup
  #       run: killall local-ic && exit 0
