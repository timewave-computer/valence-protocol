[workspace]
members = [
    "contracts/accounts/*",
    "contracts/services/*",
    "contracts/authorization",
    "contracts/processor",
    "contracts/testing/*",
    "contracts/workflow-registry",
    "packages/*",
    "workflow-manager",
    "local-interchaintest",
]
resolver = "2"

[workspace.package]
authors    = ["Timewave Labs"]
edition    = "2021"
license    = "Apache-2.0"
version    = "0.1.0"
repository = "https://github.com/timewave-computer/valence-protocol"

[profile.release]
opt-level        = 3
debug            = false
rpath            = false
lto              = true
debug-assertions = false
codegen-units    = 1
panic            = 'abort'
incremental      = false
overflow-checks  = true

[workspace.dependencies]
anyhow          = "1.0.86"
cosmwasm-std    = { version = "2.1.3", features = ["cosmwasm_1_4"] }
cosmwasm-schema = "2.1.3"
cw-denom        = { package = "cw-denom", git = "https://github.com/DA0-DA0/dao-contracts", branch = "cw-std-2" }
cw-ownable      = "2.0.0"
cw-utils        = "2.0.0"
cw-storage-plus = "2.0.0"
cw2             = "2.0.0"
getset          = "0.1.3"
itertools       = "0.13.0"
neutron-sdk     = "0.11.0"
schemars        = "0.8.16"
serde           = { version = "1.0.207", default-features = false, features = ["derive"] }
serde_json      = "1.0.125"
sha2            = "0.10.8"
thiserror       = "1.0.63"

# our contracts
valence-authorization      = { path = "contracts/authorization", features = ["library"] }
valence-base-account       = { path = "contracts/accounts/base_account", features = ["library"] }
valence-processor          = { path = "contracts/processor", features = ["library"] }
valence-splitter-service   = { path = "contracts/services/splitter", features = ["library"] }
valence-test-dynamic-ratio = { path = "contracts/testing/test-dynamic-ratio", features = ["library"] }
valence-test-service       = { path = "contracts/testing/test-service", features = ["library"] }
valence-workflow-registry  = { path = "contracts/workflow-registry", features = ["library"] }
valence-astroport-lper     = { path = "contracts/services/astroport-lper", features = ["library"] }
valence-forwarder-service  = { path = "contracts/services/forwarder", features = ["library"] }
valence-astroport-withdrawer     = { path = "contracts/services/astroport-withdrawer", features = ["library"] }
valence-reverse-splitter-service = { path = "contracts/services/reverse-splitter", features = ["library"] }

# our packages
valence-account-utils              = { path = "packages/account-utils" }
valence-astroport-utils            = { path = "packages/astroport-utils" }
valence-authorization-utils        = { path = "packages/authorization-utils" }
valence-local-interchaintest-utils = { path = "packages/local-interchaintest-utils" }
valence-macros                     = { path = "packages/valence-macros" }
valence-polytone-utils             = { path = "packages/polytone-utils" }
valence-processor-utils            = { path = "packages/processor-utils" }
valence-service-base               = { path = "packages/service-base" }
valence-service-utils              = { path = "packages/service-utils" }
valence-workflow-registry-utils    = { path = "packages/workflow-registry-utils" }

# dev-dependencies
cw-multi-test        = { version = "2.1.1", features = ["cosmwasm_1_4"] }
cw20                 = { version = "2.0.0" }
cw20-base            = { version = "2.0.0" }
hex                  = "0.4.3"
margined-neutron-std = "4.2.0"
neutron-test-tube    = "4.2.0"
